library(ggplot2)
data = read.csv("../data/Advertising.csv")
data = read.csv("../data/Advertising.csv")
library(ggplot2)
source('~/stat159/hw/stat159-fall2016-hw03/code/scripts/eda-script.R')
?pwd
?setwd
getwd()
data = read.csv("../../data/Advertising.csv")
my.summary = function(x, na.rm=TRUE){
as.data.frame(cbind(Mean = mean(x, na.rm=na.rm),
SD = sd(x, na.rm=na.rm),
Median = median(x, na.rm=na.rm),
Min = min(x, na.rm=na.rm),
Max = max(x, na.rm=na.rm),
N = length(x)),
row.names = NULL)
}
stats_Radio = my.summary(data$Radio)
View(data)
data$Radio
stats_Radio = my.summary(data$Radio)
stats_TV = my.summary(data$TV)
stats_Newspaper = my.summary(data$Newspaper)
stats_Sales = my.summary(data$Sales)
ggplot(data = data, aes(data$Radio)) +
geom_histogram(aes(fill = ..count..),
binwidth = 15) +
ggtitle("Histogram of Radio") +
xlab("TVs") +
ylab("Frequency")
ggplot(data = data, aes(data$Radio)) +
geom_histogram(aes(fill = ..count..),
binwidth = 10) +
ggtitle("Histogram of Radio") +
xlab("TVs") +
ylab("Frequency")
ggplot(data = data, aes(data$Radio)) +
geom_histogram(aes(fill = ..count..),
binwidth = 5) +
ggtitle("Histogram of Radio") +
xlab("TVs") +
ylab("Frequency")
ggplot(data = data, aes(data$Newspaper)) +
geom_histogram(aes(fill = ..count..),
binwidth = 15) +
ggtitle("Histogram of Newspaper") +
xlab("TVs") +
ylab("Frequency")
ggplot(data = data, aes(data$Newspaper)) +
geom_histogram(aes(fill = ..count..),
binwidth = 5) +
ggtitle("Histogram of Newspaper") +
xlab("TVs") +
ylab("Frequency")
ggplot(data = data, aes(data$Radio)) +
geom_histogram(aes(fill = ..count..),
binwidth = 5) +
ggtitle("Histogram of Radio") +
xlab("TVs") +
ylab("Frequency")
# Histogram for Newspaper
hist_Newspaper = ggplot(data = data, aes(data$Newspaper)) +
geom_histogram(aes(fill = ..count..),
binwidth = 5) +
ggtitle("Histogram of Newspaper") +
xlab("TVs") +
ylab("Frequency")
# Histogram for Radio
hist_Radio = ggplot(data = data, aes(data$Radio)) +
geom_histogram(aes(fill = ..count..),
binwidth = 5) +
ggtitle("Histogram of Radio") +
xlab("TVs") +
ylab("Frequency")
# Histogram for TVs
hist_TV = ggplot(data = data, aes(data$TV)) +
geom_histogram(aes(fill = ..count..),
binwidth = 15) +
ggtitle("Histogram of TVs") +
xlab("TVs") +
ylab("Frequency")
# Histogram for Sales
hist_Sales = ggplot(data = data, aes(data$Sales)) +
geom_histogram(aes(fill = ..count..),
binwidth = 5) +
ggtitle("Histogram of Sales") +
xlab("Sales") +
ylab("Frequency")
ggsave("../images/histogram-radio.png", plot = hist_Radio)
ggsave("../images/histogram-tv.png", plot = hist_TV)
ggsave("../../images/histogram-tv.png", plot = hist_TV)
ggsave("../../images/histogram-radio.png", plot = hist_Radio)
ggsave("../../images/histogram-sales.png", plot = hist_Sales)
ggsave("../../images/histogram-newspaper.png", plot = hist_Newspaper)
ggsave("../../images/histogram-sales.png", plot = hist_Sales)
ggplot(data = data, aes(data$TV)) +
geom_histogram(aes(fill = ..count..),
binwidth = 5) +
ggtitle("Histogram of TVs") +
xlab("TVs") +
ylab("Frequency")
hist_TV = ggplot(data = data, aes(data$TV)) +
geom_histogram(aes(fill = ..count..),
binwidth = 5) +
ggtitle("Histogram of TVs") +
xlab("TVs") +
ylab("Frequency")
ggsave("../../images/histogram-tv.png", plot = hist_TV)
cor(data)
class(cor(data))
corr_matrix = cor(data)
sink("../../data/eda-output.txt")
cat("Statistics of TV Budget")
cat("\n")
stats_TV
cat("\n")
cat("Statistics of Radio")
cat("\n")
stats_Radio
cat("\n")
cat("Statistics of Newspaper")
cat("\n")
stats_Newspaper
cat("\n")
cat("Statistics of Sales")
cat("\n")
stats_Sales
cat("\n")
cat("Correlation Matrix")
cat("\n")
corr_matrix
cat("\n")
sink()
require(lattice)
?plotmatrix
library(ggplot2)
?plotmatrix
??plotmatrix
splom(data)
scatterplot_matrix = splom(data)
ggsave("../../images/scatterplot-matrix.png", plot = scatterplot_matrix)
ggsave("../../images/scatterplot-matrix.png", plot = scatterplot_matrix)
View(corr_matrix)
corr_binary_matrix = corr_matrix
corr_binary_matrix[corr_binary_matrix > 0] = 1
corr_binary_matrix
corr_binary_matrix[corr_binary_matrix < 0] = -1
corr_binary_matrix
# Producing eda-output.txt
sink("../../data/eda-output.txt")
cat("Statistics of TV Budget")
cat("\n")
stats_TV
cat("\n")
cat("Statistics of Radio")
cat("\n")
stats_Radio
cat("\n")
cat("Statistics of Newspaper")
cat("\n")
stats_Newspaper
cat("\n")
cat("Statistics of Sales")
cat("\n")
stats_Sales
cat("\n")
cat("Correlation Matrix")
cat("\n")
corr_matrix
cat("\n")
cat("Binary Correlation Matrix")
cat("\n")
corr_binary_matrix
cat("\n")
sink()
save(corr_binary_matrix, file = "../../data/correlation-matrix.RData")
save(corr_matrix, file = "../../data/correlation-matrix.RData")
reg_mul.Sales = lm(Sales~TV + Radio + Newspaper, data = data)
reg_mul.Sales
reg_Radio.Sales = lm(Sales~Radio, data = data)
reg_Newspaper.Sales = lm(Sales~Newspaper, data = data)
reg_TV_summary = summary(reg_TV.Sales)
reg_TV.Sales = lm(Sales~TV, data = data)
reg_TV_summary = summary(reg_TV.Sales)
reg_Newspaper_summary = summary(reg_Newspaper.Sales)
reg_Radio_summary = summary(reg_Radio.Sales)
reg_Newspaper.Sales = lm(Sales~Newspaper, data = data)
reg_All.Sales = lm(Sales~TV + Radio + Newspaper, data = data)
reg_mul_summary = summary(reg_All.Sales)
data = transform(data, fitted_TV.Sales = fitted(reg_TV.Sales))
data = transform(data, fitted_Radio.Sales = fitted(reg_Radio.Sales))
data = transform(data, fitted_Newspaper.Sales = fitted(reg_Newspaper.Sales))
residual_sum_squares = function(y, y_hat){
return(sum((y-y_hat)^2))
}
residual_sum_squares(data$Sales, data$fitted_TV.Sales)
reg_TV_summary
reg_TV_summary$r.squared
reg_TV_summary$fitted.values
reg_TV.Sales$fitted.values
sum((reg_TV.Sales$residuals)^2)
reg_TV_summary
residual_sum_squares = function(x){
return(sum((x$residuals)^2))
}
residual_sum_squares(reg_TV.Sales)
reg_RSS_TV.Sales = residual_sum_squares(reg_TV.Sales)
reg_RSS_Radio.Sales = residual_sum_squares(reg_Radio.Sales)
reg_RSS_Newspaper.Sales = residual_sum_squares(reg_Newspaper.Sales)
reg_RSS_Newspaper.Sales
reg_RSS_Radio.Sales
reg_RSS_TV.Sales
?lm
reg_TV.Sales$y
residual_sum_squares = function(object){
# takes in an lm object and returns residuals sums of squares,
# sum of (y_i - y_hat)^2
return(sum((object$residuals)^2))
}
total_sum_squares = function(object, true_y){
y_bar = colSums(object$true_y)
return(sum((object$true_y - y_bar)^2))
}
reg_TSS_TV.Sales = total_sum_squares(reg_TV.Sales, Sales)
total_sum_squares = function(object, true_y){
y_bar = mean(object$true_y)
return(sum((object$true_y - y_bar)^2))
}
reg_TSS_TV.Sales = total_sum_squares(reg_TV.Sales, Sales)
reg_All.Sales$Sales
reg_All.Sales$model$Sales
total_sum_squares = function(object, true_y){
y_bar = mean(object$model$true_y)
return(sum((object$true_y - y_bar)^2))
}
reg_TSS_TV.Sales = total_sum_squares(reg_TV.Sales, Sales)
reg_All.Sales$model$Sales
mean(reg_All.Sales$model$Sales)
total_sum_squares = function(object, true_y){
y_bar = mean(object$model$true_y)
return(sum((object$true_y - y_bar)^2))
}
total_sum_squares(reg_All.Sales, Sales)
total_sum_squares = function(object, y){
y_bar = mean(object$model$y)
return(sum((object$true_y - y_bar)^2))
}
total_sum_squares = function(object, y){
y_bar = mean(object$model$y)
return(sum((object$y - y_bar)^2))
}
mean(reg_All.Sales$model$Sales)
total_sum_squares(reg_TV.Sales, Sales)
total_sum_squares = function(object, y){
return(object$model$y)
#y_bar = mean(object$model$y)
#return(sum((object$y - y_bar)^2))
}
total_sum_squares(reg_TV.Sales, Sales)
total_sum_squares = function(object, y){
return(object)
#y_bar = mean(object$model$y)
#return(sum((object$y - y_bar)^2))
}
total_sum_squares(reg_TV.Sales, Sales)
total_sum_squares = function(object, y){
return(object$model$y)
#y_bar = mean(object$model$y)
#return(sum((object$y - y_bar)^2))
}
total_sum_squares(reg_TV.Sales, Sales)
total_sum_squares = function(object, y){
return(object$model)
#y_bar = mean(object$model$y)
#return(sum((object$y - y_bar)^2))
}
total_sum_squares(reg_TV.Sales, Sales)
class(reg_All.Sales$model)
reg_All.Sales$model[1, ]
reg_All.Sales$model[ ,1]
total_sum_squares = function(object){
y = object$model[ ,1]
y_bar = mean(y)
return(sum((y - y_bar)^2))
}
reg_TSS_TV.Sales = total_sum_squares(reg_TV.Sales)
reg_TSS_TV.Sales
reg_TV_summary
reg_RSS_TV.Sales
reg_TSS_TV.Sales
1-(2102.531/5417.149)
r_squared = function(object){
return(1-(residual_sum_squares(object)/total_sum_squares(object)))
}
reg_All.Sales$coefficients
lenght(reg_All.Sales$coefficients)
length(reg_All.Sales$coefficients)
nrows(reg_All.Sales$model)
nrow(reg_All.Sales$model)
